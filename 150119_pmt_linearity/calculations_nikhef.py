from __future__ import division

from artist import Plot


if __name__ == '__main__':
    led = [1, 225, 300, 225, 320, 250, 350, 375, 370, 340, 325,
           300, 350, 325, 350, 350, 350, 325, 350, 350, 350,
           330, 310, 350, 350]

    led8_on_b = [1, 310, 272, 328, 332, 336, 276, 192, 352, 268, 240,
                 340, 336, 268, 320, 344, 260, 312, 248, 264, 276,
                 268, 160, 208, 200]

    led_on_b  = [1, 160, 192, 152, 240, 232, 232, 148, 352, 192, 200,
                 248, 280, 222, 274, 302, 224, 308, 200, 214, 212,
                 172, 136, 190, 168]

    multi_led = [((1, 8), 508),
                 ((2, 8), 516),
                 ((1, 2, 8), 688),
                 ((2, 3, 8), 684),
                 ((1, 2, 3, 8), 856),
                 ((3, 4, 8), 752),
                 ((1, 2, 3, 4, 8), 1130),
                 ((1, 2, 3, 4, 5, 8), 1360),
                 ((2, 3, 4, 5, 8), 1220),
                 ((1, 3, 4, 5, 8), 1170),
                 ((1, 2, 3, 4, 5, 8), 1360),
                 ((1, 2, 3, 4, 5, 6, 8), 1620),
                 ((1, 2, 3, 4, 5, 6, 7, 8), 1780),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9), 1960),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 2180),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 2420),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 2720),
                 ((2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 2560),
                 ((3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 2340),
                 ((4, 5, 6, 7, 8, 9, 10, 11, 12), 2160),
                 ((5, 6, 7, 8, 9, 10, 11, 12), 1940),
                 ((6, 7, 8, 9, 10, 11, 12), 1700),
                 ((6, 8, 9, 10, 11, 12), 1540),
                 ((7, 8, 9, 10, 11, 12), 1460),
                 ((8, 9, 10, 11, 12), 1320),
                 ((9, 10, 11, 12), 936),
                 ((10, 11, 12), 736),
                 ((11, 12), 544),
                 ((1, 12), 448),
                 ((1, 11, 12), 704),
                 ((1, 2, 11, 12), 888),
                 ((1, 2, 3, 11, 12), 1060),
                 ((1, 2, 3, 10, 11, 12), 1260),
                 ((1, 2, 3, 5, 10, 11, 12), 1500),
                 ((1, 2, 3, 5, 9, 10, 11, 12), 1700),
                 ((1, 2, 3, 5, 6, 9, 10, 11, 12), 1940),
                 ((1, 2, 3, 4, 5, 6, 9, 10, 11, 12), 2240),
                 ((1, 2, 3, 4, 5, 9, 10, 11, 12), 1980),
                 ((1, 2, 3, 4, 5, 10, 11, 12), 1780),
                 ((1, 2, 3, 4, 5, 6, 9, 10, 11, 12), 2240),
                 ((1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12), 2360),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 2760),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 2840),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3120),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), 3400),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 3600),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17), 3880),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18), 4080),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19), 4280),
                 ((10, 11, 12, 13, 14, 15, 16, 17, 18, 19), 2400),
                 ((11, 12, 13, 14, 15, 16, 17, 18, 19), 2180),
                 ((12, 13, 14, 15, 16, 17, 18, 19), 1960),
                 ((13, 14, 15, 16, 17, 18, 19), 1660),
                 ((14, 15, 16, 17, 18, 19), 1440),
                 ((15, 16, 17, 18, 19), 1160),
                 ((16, 17, 18, 19), 888),
                 ((17, 18, 19), 680),
                 ((18, 19), 408),
                 ((20, 21, 22, 23, 24), 832),
                 ((10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 3220),
                 ((9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 3380),
                 ((8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 3760),
                 ((7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 3880),
                 ((6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 4120),
                 ((5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 4360),
                 ((4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 4600),
                 ((3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 4720),
                 ((2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 4920),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 5080),
                 ((1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 4880),
                 ((1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 4920),
                 ((1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 4720),
                 ((1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23), 4600)]


    eff_8b = [l8_on_b / led[8] for l8_on_b in led8_on_b]
    eff_lb = [lb / l for lb, l in zip(led_on_b, led)]
    eff_lb_8b = [elb / e8b for elb, e8b in zip(eff_lb, eff_8b)]

    for fibers, signal in multi_led:
        sum_signal = sum(led_on_b[fiber] for fiber in fibers)

    signals = [signal for fibers, signal in multi_led]
    sum_signals = [sum(led_on_b[fiber] for fiber in fibers) for fibers, signal in multi_led]


    graph = Plot()

    graph.scatter(sum_signals, signals)
    graph.plot([0, 5500], [0, 5500], mark=None)
    graph.set_xlabel('Sum individual LED pulseheights [mV]')
    graph.set_ylabel('Multiple-LED pulseheight [mV]')
    graph.save_as_pdf('linearity_nikhef')

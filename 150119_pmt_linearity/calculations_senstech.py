from __future__ import division

from artist import Plot


if __name__ == '__main__':

    led_on_b  = [1, 160, 224, 172, 206, 246, 242, 188, 352, 180, 232,
                 236, 292, 232, 260, 258, 198, 302, 202, 212, 218,
                 186, 166, 214, 214]

    multi_led = [((1, 2), 344),
                 ((1, 2, 3), 536),
                 ((1, 2, 3, 4), 720),
                 ((1, 2, 3, 4, 5), 920),
                 ((1, 2, 3, 4, 5, 6), 1140),
                 ((1, 2, 3, 4, 5, 6, 7), 1250),
                 ((1, 2, 3, 4, 5, 6, 7, 8), 1420),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9), 1460),
                 ((1, 2, 3, 4, 5, 6, 7, 8), 1400),
                 ((2, 3, 4, 5, 6, 7, 8), 1340),
                 ((3, 4, 5, 6, 7, 8), 1240),
                 ((4, 5, 6, 7, 8), 1140),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 1540),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 1620),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 1700),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 1760),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 1840),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), 1880),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 1920),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17), 1980),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18), 2020),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19), 2060),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), 2080),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21), 2120),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22), 2140),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23), 2160),
                 ((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 2180),
                 ((2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 2160),
                 ((3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 2140),
                 ((6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 2060),
                 ((8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 1980),
                 ((10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24), 1860),
                 ((10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22), 1760),
                 ((10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), 1680),
                 ((10, 11, 12, 13, 14, 15, 16), 1350),
                 ((10, 11, 12, 13, 14), 1110),
                 ((10, 11, 12, 13), 936),
                 ((10, 11, 12), 760),
                 ((10, 11), 448),
                 ((7, 8, 9), 672),
                 ((6, 7, 8, 9), 896),
                 ((5, 6, 7, 8, 9), 1070),
                 ((4, 5, 6, 7, 8, 9), 1220),
                 ((3, 4, 5, 6, 7, 8, 9), 1290),
                 ((2, 3, 4, 5, 6, 7, 8, 9), 1380)]

    for fibers, signal in multi_led:
        sum_signal = sum(led_on_b[fiber] for fiber in fibers)

    signals = [signal for fibers, signal in multi_led]
    sum_signals = [sum(led_on_b[fiber] for fiber in fibers) for fibers, signal in multi_led]


    graph = Plot()

    graph.scatter(sum_signals, signals)
    graph.plot([0, 5500], [0, 5500], mark=None)
    graph.set_xlabel('Sum individual LED pulseheights [mV]')
    graph.set_ylabel('Multiple-LED pulseheight [mV]')
    graph.save_as_pdf('linearity_senstech')
